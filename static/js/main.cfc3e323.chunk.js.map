{"version":3,"sources":["services/generic-service.js","components/header/header.js","components/most-active-stocks-tabs/stock-card/stock-card.js","components/most-active-stocks-tabs/most-active-stocks-tabs.js","components/data-grid/data-grid.js","shared/constants.js","components/stock-details/stock-figure/stock-figure.js","components/stock-details/basic-info/basic-info.js","services/date-service.js","components/stock-details/company-news/news-card/news-card.js","components/stock-details/company-news/company-news.js","components/stock-details/stock-details.js","layout.js","serviceWorker.js","index.js"],"names":["tickerSubject","BehaviorSubject","errorMessageSubject","mostActiveDaysRangeSubject","tickerService","ticker","next","asObservable","errorMessageService","message","daysRangeService","daysRange","Header","props","state","inputTicker","handleChange","bind","handleBlur","handleSubmit","handlingComposition","handleComposition","isCompositionEnd","this","tickerSubscription","subscribe","setState","unsubscribe","e","event","target","value","trim","toUpperCase","preventDefault","className","Grid","container","spacing","justify","alignItems","item","xs","md","href","onSubmit","FormControl","Input","id","onCompositionStart","onCompositionUpdate","onCompositionEnd","onChange","onBlur","placeholder","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","edge","color","React","Component","StockCard","data","Card","style","backgroundColor","handleClickTicker","CardContent","Typography","gutterBottom","name","variant","component","noOfBuy","noOfSell","noOfTransactions","arkData","require","MostActiveStocksTabs","handleTabChange","newTabIndex","tabIndex","tabsColor","tabIndicatorColor","mostActiveStocks","mostBuyStocks","mostSellStocks","mostActiveDaysRangeSubscription","initCardsData","hash","rslt","lastestDate","Date","deadlineTimestamp","setHours","tran","Ticker","push","Name","directionSymbols","transactionsDetails","stock","find","x","Direction","unshift","numberOfStocks","length","filter","sort","a","b","slice","Tabs","orientation","TabIndicatorProps","background","Tab","label","a11yProps","TabPanel","index","map","el","key","children","other","role","hidden","aria-labelledby","Box","p","rawData","Array","prototype","swapElements","splice","DataGrid","width","window","innerWidth","height","innerHeight","updateWindowDimensions","columnDefs","Object","keys","massageRawData","genericColDef","field","specificColDef","minWidth","assign","tempData","_","addEventListener","removeEventListener","dataGridDef","defaultColDef","resizable","sortable","floatingFilter","getColumnDefs","rowData","paginationPageSize","join","pagination","onRowClicked","token","StockFigure","handleCandlestickDaysRangeChange","newValue","candlestickDaysRange","massagedData","getCandleData","figureTitle","isFigureLoading","figureRangeButtonConfigs","text","resolution","endDate","startDate","apiParams","symbol","from","to","Consts","paramsArray","prop","getCandleUrl","fetch","method","then","response","ok","status","Error","json","s","massaged","i","t","row","time","toISOString","split","parseInt","temp","setMinutes","getMinutes","toLocaleTimeString","Math","round","o","c","l","h","v","catch","error","categoryData","values","volumes","dayCount","result","len","sum","j","splitData","option","title","left","top","textStyle","fontSize","tooltip","trigger","axisPointer","animation","type","lineStyle","opacity","legend","inactiveColor","link","xAxisIndex","toolbox","show","feature","dataZoom","yAxisIndex","brush","visualMap","seriesIndex","dimension","pieces","grid","bottom","xAxis","scale","boundaryGap","axisLine","onZero","splitLine","splitNumber","min","max","axisLabel","gridIndex","axisTick","yAxis","splitArea","start","end","handleIcon","handleSize","dataBackground","areaStyle","handleStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","series","itemStyle","color0","borderColor","borderColor0","markPoint","normal","formatter","param","valueDim","symbolOffset","coord","markLine","symbolSize","emphasis","calculateMA","smooth","filteredArkData","groupMap","date","dataArrayInDate","dataInProps","m","buyCount","sellCount","pointText","subComponent","CircularProgress","getOption","notMerge","lazyUpdate","ToggleButtonGroup","exclusive","button","ToggleButton","viewBox","fill","xmlns","d","BasicInfo","isLoading","showInfo","companyInfo","ipoDate","exchange","marketCap","shareOutstanding","logoUrl","companyWebUrl","industry","getBasicInfo","getBasicInfoUrl","constructor","ipo","marketCapitalization","logo","weburl","finnhubIndustry","src","alt","dateService","intervalType","seconds","floor","getTime","interval","NewsCard","location","newsDetails","url","handleClickNews","headline","datetime","source","summary","substring","CompanyNews","news","getCompanyNews","getCompanyNewsUrl","element","StockDetails","AppBar","icon","disabled","Layout","expanded","mostActiveDaysRange","errorMessage","isInputing","handlePanelChange","handleClickDaysRange","handleSelectDaysRange","handleDonationSectionClick","coffeeEmoji","createRef","panelArr","indexOf","errorMessageSubscription","panel","isExpanded","stopPropagation","console","log","current","click","notificationBar","Alert","severity","onClose","Accordion","includes","AccordionSummary","expandIcon","aria-controls","Select","labelId","MenuProps","disableScrollLock","MenuItem","AccordionDetails","action","Button","size","ref","border","packageJson","version","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfc3e323.chunk.js","sourcesContent":["import { BehaviorSubject } from 'rxjs';\r\n\r\nconst tickerSubject = new BehaviorSubject('');\r\nconst errorMessageSubject = new BehaviorSubject('');\r\n\r\nconst mostActiveDaysRangeSubject = new BehaviorSubject(7);\r\nconst candlestickDaysRangeSubject = new BehaviorSubject(30);\r\n\r\nexport const tickerService = {\r\n    changeTicker: ticker => tickerSubject.next(ticker),\r\n    clearTicker: () => tickerSubject.next(),\r\n    getTicker: () => tickerSubject.asObservable()\r\n};\r\n\r\nexport const errorMessageService = {\r\n    changeErrorMessage: message => errorMessageSubject.next(message),\r\n    clearErrorMessage: () => errorMessageSubject.next(),\r\n    getErrorMessage: () => errorMessageSubject.asObservable()\r\n};\r\n\r\nexport const daysRangeService = {\r\n    changeMostActiveDaysRange: daysRange => mostActiveDaysRangeSubject.next(daysRange),\r\n    clearMostActiveDaysRange: () => mostActiveDaysRangeSubject.next(),\r\n    getMostActiveDaysRange: () => mostActiveDaysRangeSubject.asObservable(),\r\n\r\n    changeCandlestickDaysRange: daysRange => candlestickDaysRangeSubject.next(daysRange),\r\n    clearCandlestickDaysRange: () => candlestickDaysRangeSubject.next(),\r\n    getCandlestickDaysRange: () => candlestickDaysRangeSubject.asObservable()\r\n};","import React from 'react';\r\nimport {\r\n    Grid, Input, FormControl,\r\n    IconButton, InputAdornment,\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport './header.scss';\r\nimport { tickerService } from '../../services/generic-service'\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputTicker: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handlingComposition = this.handlingComposition.bind(this);\r\n        this.handleComposition = this.handleComposition.bind(this);\r\n        this.isCompositionEnd = true;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\r\n            if (ticker) {\r\n                this.setState({ inputTicker: ticker });\r\n            } else {\r\n                this.setState({ ticker: '' });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.tickerSubscription.unsubscribe();\r\n    }\r\n\r\n    handlingComposition() {\r\n        this.isCompositionEnd = false;\r\n    }\r\n\r\n    handleComposition(e) {\r\n        this.isCompositionEnd = true;\r\n    }\r\n\r\n    handleChange(event) {\r\n        if (this.isCompositionEnd) {\r\n            this.setState({ inputTicker: event.target.value.trim().toUpperCase() });\r\n        }\r\n    }\r\n\r\n    handleBlur(event) {\r\n        this.isCompositionEnd = true;\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        tickerService.changeTicker(this.state.inputTicker);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header-section\">\r\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={6} md={10} className='title-container'>\r\n                        {/* <span className=\"logo\">\r\n                            <a href=\"http://karlzhu-se.github.io/ark-funds-monitor/\">\r\n                                <img height=\"90\" width=\"120\" src=\"https://ark-funds.com/wp-content/uploads/2020/07/ark-logo-1-1.svg\" alt=\"ark-funds.com\" title=\"\" />\r\n                            </a>\r\n                        </span> */}\r\n                        <a className='title' href=\"http://karlzhu-se.github.io/ark-funds-monitor/\">\r\n                            <span>ARK Funds Monitor</span>\r\n                        </a>\r\n                        {/* <div className=\"github-section\">\r\n                            <span>View it on</span>\r\n                            <a className=\"github-icon\" href=\"https://github.com/KarlZhu-SE/ark-funds-monitor\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Github\">\r\n                                <svg height=\"24\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"24\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\r\n                            </a>\r\n                        </div> */}\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} md={2} className=\"ticker-input-section\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <FormControl>\r\n                                <div>\r\n                                    <Input\r\n                                        id=\"ticker-textfield\"\r\n                                        value={this.state.inputTicker}\r\n                                        onCompositionStart={this.handlingComposition}\r\n                                        onCompositionUpdate={this.handlingComposition}\r\n                                        onCompositionEnd={this.handleComposition}\r\n                                        onChange={this.handleChange}\r\n                                        onBlur={this.handleBlur}\r\n                                        placeholder='Ticker'\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <IconButton\r\n                                                    aria-label=\"Search\"\r\n                                                    onClick={this.handleSubmit}\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    <SearchIcon color=\"primary\" />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            </FormControl>\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport './stock-card.scss';\r\nimport { tickerService } from '../../../services/generic-service';\r\n\r\nclass StockCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    handleClickTicker(event) {\r\n        tickerService.changeTicker(this.props.data.ticker);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"stock-card-wrapper\">\r\n                <Card style={{backgroundColor: this.props.backgroundColor}} onClick={this.handleClickTicker.bind(this)}>\r\n                    <CardContent>\r\n                        <Typography className='card-ticker'>\r\n                            {this.props.data.ticker}\r\n                        </Typography>\r\n                        <Typography className='card-full-name' color=\"textSecondary\" gutterBottom>\r\n                            {this.props.data.name}\r\n                        </Typography>\r\n                        <Typography className='card-details' variant=\"body2\" component=\"p\">\r\n                            Buys : {this.props.data.noOfBuy}\r\n                            <br/>\r\n                            Sells: {this.props.data.noOfSell}\r\n                            <br/>\r\n                            Trans: {this.props.data.noOfTransactions}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default StockCard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport './most-active-stocks-tabs.scss';\r\nimport StockCard from './stock-card/stock-card';\r\nimport { daysRangeService } from '../../services/generic-service';\r\n\r\nlet arkData = require('../../rawData/mergedData.json');\r\n\r\nclass MostActiveStocksTabs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tabIndex: 0,\r\n            // buy, sell, active colors\r\n            tabsColor: ['#00C805', '#FF5000', '#FCAE1E'],\r\n            tabIndicatorColor: '#00C805',\r\n            mostActiveStocks: [],\r\n            mostBuyStocks: [],\r\n            mostSellStocks: []\r\n        };\r\n        this.props = props;\r\n        this.handleTabChange = this.handleTabChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mostActiveDaysRangeSubscription = daysRangeService.getMostActiveDaysRange().subscribe(daysRange => {\r\n            if (daysRange) {\r\n                this.initCardsData(arkData, daysRange);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mostActiveDaysRangeSubscription.unsubscribe();\r\n    }\r\n\r\n    initCardsData(arkData, daysRange) {\r\n        // for now, check all time data\r\n        // [{\r\n        // ticker: 'TSLA'\r\n        // name: Name\r\n        // noOfSell:\r\n        // noOfBuy:\r\n        // noOfTransactions: number:\r\n        // directionSymbol: []\r\n        // transactionsDetails: []\r\n        // }]\r\n        let hash = {};\r\n        let rslt = [];\r\n        let lastestDate = arkData[0].Date;\r\n        let deadlineTimestamp = '';\r\n\r\n        if (daysRange !== 10000) {\r\n            deadlineTimestamp = new Date(lastestDate).setHours(0, 0, 0, 0) - daysRange * 24 * 60 * 60 * 1000;\r\n        }\r\n\r\n        for (let tran of arkData) {\r\n            // handle deadline\r\n            if (deadlineTimestamp && new Date(tran.Date).setHours(0, 0, 0, 0) <= deadlineTimestamp) {\r\n                break;\r\n            }\r\n\r\n            if (!hash[tran.Ticker]) {\r\n                hash[tran.Ticker] = 1;\r\n                rslt.push({\r\n                    ticker: tran.Ticker,\r\n                    name: tran.Name,\r\n                    noOfSell: 0,\r\n                    noOfBuy: 0,\r\n                    noOfTransactions: 0,\r\n                    directionSymbols: [],\r\n                    transactionsDetails: []\r\n                })\r\n            } else {\r\n                hash[tran.Ticker]++;\r\n            }\r\n\r\n            const stock = rslt.find(x => x.ticker === tran.Ticker);\r\n            if (tran.Direction === 'Buy') {\r\n                stock.noOfBuy++;\r\n            } else if (tran.Direction === 'Sell') {\r\n                stock.noOfSell++;\r\n            }\r\n            stock.noOfTransactions++;\r\n            stock.directionSymbols.unshift(tran.Direction);\r\n            stock.transactionsDetails.push(tran);\r\n        }\r\n\r\n        const numberOfStocks = rslt.length > 10 ? 10 : rslt.length;\r\n        // eslint-disable-next-line\r\n        this.state.mostBuyStocks = rslt.filter(x => x.noOfBuy > 0).sort((a, b) => b.noOfBuy - a.noOfBuy).slice(0, numberOfStocks);\r\n        // eslint-disable-next-line\r\n        this.state.mostSellStocks = rslt.filter(x => x.noOfSell > 0).sort((a, b) => b.noOfSell - a.noOfSell).slice(0, numberOfStocks);\r\n        // eslint-disable-next-line\r\n        this.state.mostActiveStocks = rslt.sort((a, b) => b.noOfTransactions - a.noOfTransactions).slice(0, numberOfStocks);\r\n    }\r\n\r\n    handleTabChange = (event, newTabIndex) => {\r\n        this.setState({ tabIndex: newTabIndex });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"most-active-stocks-tabs-section\">\r\n                <Tabs\r\n                    orientation=\"vertical\"\r\n                    variant=\"scrollable\"\r\n                    value={this.state.tabIndex}\r\n                    onChange={this.handleTabChange}\r\n                    aria-label=\"Vertical tabs example\"\r\n                    TabIndicatorProps={{ style: { background: this.state.tabsColor[this.state.tabIndex] } }}\r\n                >\r\n                    <Tab label=\"Most Buy\" {...a11yProps(0)} />\r\n                    <Tab label=\"Most Sell\" {...a11yProps(1)} />\r\n                    <Tab label=\"Most Active\" {...a11yProps(2)} />\r\n                </Tabs>\r\n\r\n                <TabPanel value={this.state.tabIndex} index={0}>\r\n                    {this.state.mostBuyStocks.map(el =>\r\n                        <StockCard key={el.ticker} data={el} backgroundColor={this.state.tabsColor[this.state.tabIndex]} />\r\n                    )}\r\n                </TabPanel>\r\n                <TabPanel value={this.state.tabIndex} index={1}>\r\n                    {this.state.mostSellStocks.map(el =>\r\n                        <StockCard key={el.ticker} data={el} backgroundColor={this.state.tabsColor[this.state.tabIndex]} />\r\n                    )}\r\n                </TabPanel>\r\n                <TabPanel value={this.state.tabIndex} index={2}>\r\n                    {this.state.mostActiveStocks.map(el =>\r\n                        <StockCard key={el.ticker} data={el} backgroundColor={this.state.tabsColor[this.state.tabIndex]} />\r\n                    )}\r\n                </TabPanel>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default MostActiveStocksTabs;\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3} className=\"vertical-tabpanel-content\">\r\n                    <div className=\"cards-wrapper\">{children}</div>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}","import React from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport * as _ from 'lodash';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport './data-grid.scss';\r\nimport { tickerService } from '../../services/generic-service'\r\n\r\nlet rawData = require('../../rawData/mergedData.json');\r\n\r\n// eslint-disable-next-line\r\nArray.prototype.swapElements = function (a, b) {\r\n    this[a] = this.splice(b, 1, this[a])[0];\r\n    return this;\r\n}\r\n\r\nclass DataGrid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n        };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    getColumnDefs(rawData) {\r\n        const columnDefs = [];\r\n        const columnNamesInOrder = Object.keys(this.massageRawData(rawData)[0]).swapElements(0, 1);\r\n        // eslint-disable-next-line\r\n        columnNamesInOrder.map(x => {\r\n            let genericColDef = {\r\n                field: x,\r\n            };\r\n            let specificColDef = {};\r\n            switch (x) {\r\n                case 'Date':\r\n                    specificColDef = {\r\n                        width: this.state.width / 12,\r\n                        minWidth: 120,\r\n                    }\r\n                    break\r\n                case 'Direction':\r\n                case 'CUSIP':\r\n                case 'Shares':\r\n                case '% Of ETF':\r\n                case 'Ticker':\r\n                    specificColDef = {\r\n                        width: this.state.width / 12,\r\n                        minWidth: 100,\r\n                    }\r\n                    break\r\n                case 'FUND':\r\n                    specificColDef = {\r\n                        width: this.state.width / 12,\r\n                        minWidth: 90,\r\n                    }\r\n                    break\r\n                case 'Name':\r\n                    specificColDef = {\r\n                        width: this.state.width / 4,\r\n                    }\r\n                    break\r\n                default:\r\n                    specificColDef = {\r\n                        width: this.state.width / 8,\r\n                        minWidth: 100,\r\n                    };\r\n                    break;\r\n            }\r\n            columnDefs.push(Object.assign(genericColDef, specificColDef));\r\n        })\r\n        return columnDefs;\r\n    }\r\n\r\n    massageRawData(rawData) {\r\n        let tempData = _.cloneDeep(rawData);\r\n        // remove empty property\r\n        // eslint-disable-next-line\r\n        tempData.map(x => {\r\n            for (let key in x) {\r\n                if (key === '') {\r\n                    delete x[key];\r\n                }\r\n            }\r\n        })\r\n        return tempData;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    onRowClicked(e) {\r\n        if (e && e.data && e.data.Ticker) {\r\n            tickerService.changeTicker(e.data.Ticker);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const dataGridDef = {\r\n            defaultColDef: {\r\n                resizable: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter',\r\n                floatingFilter: true\r\n            },\r\n            columnDefs: this.getColumnDefs(rawData),\r\n            rowData: this.massageRawData(rawData),\r\n            paginationPageSize: 20\r\n        }\r\n        return (\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12} className={['ag-theme-alpine', 'center'].join(' ')}>\r\n                    <AgGridReact\r\n                        rowData={dataGridDef.rowData}\r\n                        columnDefs={dataGridDef.columnDefs}\r\n                        defaultColDef={dataGridDef.defaultColDef}\r\n                        // paginationAutoPageSize={true}\r\n                        paginationPageSize={dataGridDef.paginationPageSize}\r\n                        pagination={true}\r\n                        onRowClicked={this.onRowClicked.bind(this)}\r\n                    >\r\n                    </AgGridReact>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DataGrid;","export const token = 'bvddfhv48v6tkd6gjq8g';\r\n\r\nexport const getCandleUrl = 'https://finnhub.io/api/v1/stock/candle?';\r\nexport const getBasicInfoUrl = 'https://finnhub.io/api/v1/stock/profile2?';\r\nexport const getCompanyNewsUrl = 'https://finnhub.io/api/v1/company-news?';\r\n","import React from 'react';\r\nimport * as _ from 'lodash';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport {\r\n    CircularProgress, Grid\r\n} from '@material-ui/core';\r\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\r\n\r\nimport * as Consts from '../../../shared/constants';\r\nimport { tickerService, errorMessageService } from '../../../services/generic-service';\r\nimport './stock-figure.scss';\r\n\r\nlet arkData = require('../../../rawData/mergedData.json');\r\n\r\nvar downColor = '#FF5000';\r\nvar downBorderColor = '#8A0000';\r\nvar upColor = '#00C805';\r\nvar upBorderColor = '#008F28';\r\n\r\nclass StockFigure extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ticker: '',\r\n            figureTitle: '',\r\n            candlestickDaysRange: 90,\r\n            isFigureLoading: false,\r\n            massagedData: [],\r\n            figureRangeButtonConfigs: [\r\n                { id: '1D', text: '1D', value: 1, resolution: '5', daysRange: 1 },\r\n                { id: '1W', text: '1W', value: 7, resolution: 'D', daysRange: 7 },\r\n                { id: '2W', text: '2W', value: 14, resolution: 'D', daysRange: 14 },\r\n                { id: '1M', text: '1M', value: 30, resolution: 'D', daysRange: 30 },\r\n                { id: '3M', text: '3M', value: 90, resolution: 'D', daysRange: 90 },\r\n                { id: '1Y', text: '1Y', value: 365, resolution: 'D', daysRange: 365 }\r\n            ]\r\n        };\r\n        this.props = props;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\r\n            if (ticker) {\r\n                this.setState({ ticker: ticker });\r\n                this.getCandleData(ticker, this.state.candlestickDaysRange);\r\n            } else {\r\n                this.setState({ ticker: '' });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.tickerSubscription.unsubscribe();\r\n    }\r\n\r\n    getCandleData(ticker, daysRange) {\r\n        errorMessageService.changeErrorMessage('');\r\n        this.setState({ isFigureLoading: true });\r\n\r\n\r\n        // let that = this;\r\n        let endDate = new Date().setHours(0, 0, 0, 0) / 1000;\r\n        let startDate = endDate - daysRange * 24 * 60 * 60;\r\n        let resolution = this.state.figureRangeButtonConfigs.find(x => x.value === daysRange).resolution;\r\n\r\n        const apiParams = {\r\n            symbol: ticker,\r\n            resolution: resolution,\r\n            from: startDate,\r\n            to: endDate,\r\n            token: Consts.token\r\n        };\r\n        let paramsArray = [];\r\n        for (let prop in apiParams) {\r\n            paramsArray.push(`${prop}=${apiParams[prop]}`);\r\n        }\r\n        let getCandleUrl = Consts.getCandleUrl + paramsArray.join('&');\r\n\r\n        fetch(getCandleUrl, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 429) {\r\n                        errorMessageService.changeErrorMessage(`Too Many Requests, Please Wait`);\r\n                    }\r\n                    throw new Error(\"HTTP status \" + response.status);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                if (data && data.s === 'ok') {\r\n                    let massaged = [];\r\n                    for (let i = 0; i < data.t.length; i++) {\r\n                        let row = [];\r\n                        let time = '';\r\n                        if (resolution === 'D') {\r\n                            time = new Date(data.t[i] * 1000).toISOString().split(\"T\")[0]\r\n                        } else if (typeof(parseInt(resolution)) === 'number') {\r\n                            const temp = new Date(data.t[i] * 1000);\r\n                            time = new Date(temp.setMinutes(temp.getMinutes() - 240)).toLocaleTimeString(\"en-US\");\r\n                        }\r\n\r\n                        row.push(\r\n                            time,\r\n                            Math.round(data.o[i] * 100) / 100,\r\n                            Math.round(data.c[i] * 100) / 100,\r\n                            Math.round(data.l[i] * 100) / 100,\r\n                            Math.round(data.h[i] * 100) / 100,\r\n                            data.v[i],\r\n                        )\r\n                        massaged.push(row);\r\n                    }\r\n\r\n                    this.setState({ figureTitle: ticker });\r\n                    this.setState({ massagedData: massaged });\r\n                }\r\n\r\n                if (data.s === 'no_data') {\r\n                    errorMessageService.changeErrorMessage(`API returned 'NO DATA' for ${ticker}`);\r\n                }\r\n\r\n                this.setState({ isFigureLoading: false });\r\n            })\r\n            .catch(error => this.setState({ error }));\r\n    }\r\n\r\n    splitData(rawData) {\r\n        var categoryData = [];\r\n        var values = [];\r\n        var volumes = [];\r\n\r\n        for (var i = 0; i < rawData.length; i++) {\r\n            categoryData.push(rawData[i].splice(0, 1)[0]);\r\n            values.push(rawData[i]);\r\n            volumes.push([i, rawData[i][4], rawData[i][0] > rawData[i][1] ? 1 : -1]);;\r\n        }\r\n        return {\r\n            categoryData: categoryData,\r\n            values: values,\r\n            volumes: volumes\r\n        };\r\n    }\r\n\r\n    calculateMA(dayCount) {\r\n        var result = [];\r\n        for (var i = 0, len = this.data.values.length; i < len; i++) {\r\n            if (i < dayCount) {\r\n                result.push('-');\r\n                continue;\r\n            }\r\n            var sum = 0;\r\n            for (var j = 0; j < dayCount; j++) {\r\n                sum += this.data.values[i - j][1];\r\n            }\r\n            result.push(Math.round(sum / dayCount * 100) / 100);\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    getOption() {\r\n        this.data = this.splitData(_.cloneDeep(this.state.massagedData));\r\n        let option = {\r\n            backgroundColor: '#fff',\r\n            title: {\r\n                text: this.state.figureTitle,\r\n                left: '2%',\r\n                top: '-1%',\r\n                textStyle: {\r\n                    color: '#000',\r\n                    fontSize: 20\r\n                },\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    animation: false,\r\n                    type: 'cross',\r\n                    label: {\r\n                        fontSize: 16\r\n                    },\r\n                    lineStyle: {\r\n                        color: '#376df4',\r\n                        width: 2,\r\n                        opacity: 1\r\n                    }\r\n                },\r\n                textStyle: {\r\n                    fontSize: 16\r\n                }\r\n            },\r\n            legend: {\r\n                data: ['Day'],\r\n                inactiveColor: '#777',\r\n                textStyle: {\r\n                    color: '#000',\r\n                    fontSize: 16\r\n                },\r\n                top: '3%',\r\n            },\r\n            axisPointer: {\r\n                link: { xAxisIndex: 'all' },\r\n                label: {\r\n                    backgroundColor: '#777'\r\n                }\r\n            },\r\n            toolbox: {\r\n                show: false,\r\n                feature: {\r\n                    dataZoom: {\r\n                        yAxisIndex: false\r\n                    },\r\n                    brush: {\r\n                        type: ['lineX', 'clear']\r\n                    }\r\n                }\r\n            },\r\n            visualMap: {\r\n                show: false,\r\n                seriesIndex: 1,\r\n                dimension: 2,\r\n                pieces: [{\r\n                    value: 1,\r\n                    color: downColor\r\n                }, {\r\n                    value: -1,\r\n                    color: upColor\r\n                }]\r\n            },\r\n            grid: [\r\n                {\r\n                    bottom: '30%'\r\n                },\r\n                {\r\n                    height: '15%',\r\n                    bottom: '10%'\r\n                }\r\n            ],\r\n            xAxis: [\r\n                {\r\n                    type: 'category',\r\n                    data: this.data.categoryData,\r\n                    scale: true,\r\n                    boundaryGap: false,\r\n                    axisLine: { onZero: false, lineStyle: { color: '#000' } },\r\n                    splitLine: { show: false },\r\n                    splitNumber: 20,\r\n                    min: 'dataMin',\r\n                    max: 'dataMax',\r\n                    axisLabel: {\r\n                        show: true,\r\n                        textStyle: {\r\n                            fontSize: 14\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    type: 'category',\r\n                    gridIndex: 1,\r\n                    data: this.data.categoryData,\r\n                    scale: true,\r\n                    boundaryGap: false,\r\n                    axisLine: { onZero: false, lineStyle: { color: '#8392A5' } },\r\n                    axisTick: { show: false },\r\n                    splitLine: { show: false },\r\n                    axisLabel: { show: false },\r\n                    splitNumber: 20,\r\n                    min: 'dataMin',\r\n                    max: 'dataMax'\r\n                }\r\n            ],\r\n            yAxis: [{\r\n                scale: true,\r\n                splitArea: {\r\n                    show: true\r\n                },\r\n                axisLine: { lineStyle: { color: '#000' } },\r\n                splitLine: { show: false },\r\n                axisLabel: {\r\n                    show: true,\r\n                    textStyle: {\r\n                        fontSize: 14\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                scale: true,\r\n                gridIndex: 1,\r\n                splitNumber: 2,\r\n                axisLabel: { show: false },\r\n                axisLine: { show: false, lineStyle: { color: '#000' } },\r\n                axisTick: { show: false },\r\n                splitLine: { show: false },\r\n            }\r\n            ],\r\n            dataZoom: [\r\n                {\r\n                    type: 'inside',\r\n                    start: 0,\r\n                    end: 100\r\n                },\r\n                {\r\n                    show: true,\r\n                    type: 'slider',\r\n                    bottom: '2%',\r\n                    start: 0,\r\n                    end: 100,\r\n                    textStyle: {\r\n                        color: '#8392A5'\r\n                    },\r\n                    handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\r\n                    handleSize: '80%',\r\n                    dataBackground: {\r\n                        areaStyle: {\r\n                            color: '#8392A5'\r\n                        },\r\n                        lineStyle: {\r\n                            opacity: 0.8,\r\n                            color: '#8392A5'\r\n                        }\r\n                    },\r\n                    handleStyle: {\r\n                        color: '#fff',\r\n                        shadowBlur: 3,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.6)',\r\n                        shadowOffsetX: 2,\r\n                        shadowOffsetY: 2\r\n                    }\r\n                }\r\n            ],\r\n            series: [\r\n                {\r\n                    name: 'Day',\r\n                    type: 'candlestick',\r\n                    data: this.data.values,\r\n                    itemStyle: {\r\n                        color: upColor,\r\n                        color0: downColor,\r\n                        borderColor: upBorderColor,\r\n                        borderColor0: downBorderColor\r\n                    },\r\n                    markPoint:\r\n                    {\r\n                        label: {\r\n                            normal: {\r\n                                formatter: function (param) {\r\n                                    if (typeof (param) === 'number') {\r\n                                        return param != null ? Math.round(param.value) : '';\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        data: [\r\n                            {\r\n                                name: 'highest value',\r\n                                type: 'max',\r\n                                valueDim: 'highest',\r\n                                symbolOffset: [0, -30],\r\n                                itemStyle: {\r\n                                    color: '#FCAE1E'\r\n                                }\r\n                            },\r\n                            {\r\n                                name: 'lowest value',\r\n                                type: 'min',\r\n                                valueDim: 'lowest',\r\n                                symbolOffset: [0, -30],\r\n                                itemStyle: {\r\n                                    color: '#FCAE1E'\r\n                                }\r\n                            },\r\n                            // {\r\n                            //     name: 'average value on close',\r\n                            //     type: 'average',\r\n                            //     valueDim: 'close',\r\n                            //     symbolOffset: [0, -20]\r\n                            // }\r\n                        ],\r\n                        tooltip: {\r\n                            formatter: ((param) => param.name + '<br>' + (param.data.coord || ''))\r\n                        }\r\n                    },\r\n                    markLine: {\r\n                        symbol: ['none', 'none'],\r\n                        lineStyle: {\r\n                            color: downColor\r\n                        },\r\n                        data: [\r\n                            [\r\n                                {\r\n                                    name: 'from lowest to highest',\r\n                                    type: 'min',\r\n                                    valueDim: 'lowest',\r\n                                    symbol: 'circle',\r\n                                    symbolSize: 10,\r\n                                    label: {\r\n                                        show: false\r\n                                    },\r\n                                    emphasis: {\r\n                                        label: {\r\n                                            show: false\r\n                                        }\r\n                                    }\r\n                                },\r\n                                {\r\n                                    type: 'max',\r\n                                    valueDim: 'highest',\r\n                                    symbol: 'circle',\r\n                                    symbolSize: 10,\r\n                                    label: {\r\n                                        show: false\r\n                                    },\r\n                                    emphasis: {\r\n                                        label: {\r\n                                            show: false\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ],\r\n                            {\r\n                                name: 'min line on close',\r\n                                type: 'min',\r\n                                valueDim: 'close'\r\n                            },\r\n                            {\r\n                                name: 'max line on close',\r\n                                type: 'max',\r\n                                valueDim: 'close'\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    name: 'Volume',\r\n                    type: 'bar',\r\n                    xAxisIndex: 1,\r\n                    yAxisIndex: 1,\r\n                    data: this.data.volumes\r\n                }\r\n\r\n            ]\r\n        };\r\n\r\n        // If resolution !== 'D' skip ARK history mark points and MA lines\r\n        if (this.state.figureRangeButtonConfigs.find(x => x.value === this.state.candlestickDaysRange).resolution !== 'D') {\r\n            return option;\r\n        }\r\n\r\n        // add MA lines according to candlestickDaysRange\r\n        if (this.state.candlestickDaysRange >= 10) {\r\n            option.series.push({\r\n                    name: 'MA5',\r\n                    type: 'line',\r\n                    data: this.calculateMA(5),\r\n                    smooth: true,\r\n                    lineStyle: {\r\n                        opacity: 0.5\r\n                    },\r\n                    itemStyle: {\r\n                        color: '#0000FF'\r\n                    }\r\n            });\r\n            option.legend.data.push('MA5');\r\n        }\r\n        if (this.state.candlestickDaysRange >= 20) {\r\n            option.series.push({\r\n                    name: 'MA10',\r\n                    type: 'line',\r\n                    data: this.calculateMA(10),\r\n                    smooth: true,\r\n                    lineStyle: {\r\n                        opacity: 0.5\r\n                    },\r\n                    itemStyle: {\r\n                        color: '#FFAE19'\r\n                    }\r\n            });\r\n            option.legend.data.push('MA10');\r\n        }\r\n        if (this.state.candlestickDaysRange >= 40) {\r\n            option.series.push({\r\n                name: 'MA20',\r\n                type: 'line',\r\n                data: this.calculateMA(20),\r\n                smooth: true,\r\n                lineStyle: {\r\n                    opacity: 0.5\r\n                },\r\n                itemStyle: {\r\n                    color: '#FF00FF',\r\n                }\r\n            });\r\n            option.legend.data.push('MA20');\r\n        }\r\n\r\n        // handle mark point for BUY/SELL from ARK\r\n        const filteredArkData = arkData.filter(x => x.Ticker === this.state.figureTitle);\r\n        if (!filteredArkData || filteredArkData.length === 0) {\r\n            return option;\r\n        }\r\n\r\n        const groupMap = _.groupBy(filteredArkData, 'Date');\r\n        for (let date in groupMap) {\r\n            const dataArrayInDate = groupMap[date];\r\n            const dataInProps = this.state.massagedData.find(m => m[0] === dataArrayInDate[0].Date);\r\n            if (!(dataInProps && dataInProps[4])) {\r\n                continue;\r\n            }\r\n\r\n            const buyCount = dataArrayInDate.filter(x => x.Direction === 'Buy').length;\r\n            const sellCount = dataArrayInDate.length - buyCount;\r\n\r\n            if (buyCount === 0 || sellCount === 0) {\r\n                let pointText = '';\r\n                if (buyCount === 0) {\r\n                    pointText = sellCount === 1\r\n                        ? `${dataArrayInDate[0].Direction}`\r\n                        : `Sell\\nX${sellCount}`;\r\n                } else if (sellCount === 0) {\r\n                    pointText = buyCount === 1\r\n                        ? `${dataArrayInDate[0].Direction}`\r\n                        : `Buy\\nX${buyCount}`;\r\n                }\r\n\r\n                option.series[0].markPoint.data.push({\r\n                    name: `${dataArrayInDate[0].Date} ${dataArrayInDate[0].Direction}`,\r\n                    coord: [dataArrayInDate[0].Date, dataInProps[4]],\r\n                    value: pointText,\r\n                    itemStyle: {\r\n                        color: buyCount === 0\r\n                            ? '#FF5000'\r\n                            : '#00C805'\r\n                    }\r\n                })\r\n            } else {\r\n                // have buyCount > 0 and sellCount > 0\r\n                option.series[0].markPoint.data.push({\r\n                    name: `${dataArrayInDate[0].Date} Buy`,\r\n                    coord: [dataArrayInDate[0].Date, dataInProps[4]],\r\n                    value: `Buy\\nX${buyCount}`,\r\n                    itemStyle: {\r\n                        color: '#00C805'\r\n                    }\r\n                })\r\n\r\n                option.series[0].markPoint.data.push({\r\n                    name: `${dataArrayInDate[0].Date} Sell`,\r\n                    coord: [dataArrayInDate[0].Date, dataInProps[4] * 1.1],\r\n                    value: `Sell\\n${sellCount}`,\r\n                    itemStyle: {\r\n                        color: '#FF5000'\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n\r\n    handleCandlestickDaysRangeChange = (event, newValue) => {\r\n        if (newValue !== this.state.candlestickDaysRange && this.state.massagedData.length > 0) {\r\n            this.setState({ candlestickDaysRange: newValue });\r\n            this.getCandleData(this.state.ticker, newValue);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let subComponent;\r\n        if (this.state.isFigureLoading === true) {\r\n            subComponent =\r\n                <div className='loader-wrapper'>\r\n                    <CircularProgress />\r\n                </div>\r\n        } else if (this.state.massagedData.length > 0) {\r\n            // const fullRangePercentage = this.state.massagedData[this.state.massagedData.length - 1][2] / this.state.massagedData.data[0][2] - 1;\r\n            // const halfRangePercentage = this.state.massagedData[this.state.massagedData.length - 1][2] / this.state.massagedData.data[Math.round((this.state.massagedData.data.length - 1) / 2)][2] - 1;\r\n\r\n            // let fullRangeChange = (fullRangePercentage < 0 ? \"\" : \"+\") + (fullRangePercentage * 100).toFixed(2) + '%'\r\n            // let halfRangeChange = (halfRangePercentage < 0 ? \"\" : \"+\") + (halfRangePercentage * 100).toFixed(2) + '%'\r\n\r\n            subComponent =\r\n                <div>\r\n                    {/* <div className=\"highlights\">\r\n                        <div><p>Full range price change: {fullRangeChange}</p></div>\r\n                        <div><p>Half range price change: {halfRangeChange}</p></div>\r\n                    </div> */}\r\n\r\n                    <ReactEcharts\r\n                        option={this.getOption()}\r\n                        notMerge={true}\r\n                        lazyUpdate={true}\r\n                        style={{ height: '400px', width: '100%' }}\r\n                    />\r\n\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <ToggleButtonGroup\r\n                            className=\"toggle-button-group\"\r\n                            value={this.state.candlestickDaysRange}\r\n                            exclusive\r\n                            onChange={this.handleCandlestickDaysRangeChange}\r\n                            aria-label=\"figure-range-button-group\"\r\n                        >\r\n                            {this.state.figureRangeButtonConfigs.map(button =>\r\n                                <ToggleButton key={button.id} value={button.value} aria-label={`toggle-button-${button.id}`}>{button.text}</ToggleButton>\r\n                            )}\r\n                        </ToggleButtonGroup>\r\n                    </Grid>\r\n                </div>\r\n        } else {\r\n            subComponent =\r\n                <div className=\"chart-placeholder\">\r\n                    <p>\r\n                        Search Any Ticker/Tap Any Card/Tap Any Row\r\n                        <br></br>\r\n                        Candlestick Chart Will Display Below\r\n                    </p>\r\n                    <svg width=\"3em\" height=\"3em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-double-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M1.646 6.646a.5.5 0 0 1 .708 0L8 12.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" />\r\n                        <path d=\"M1.646 2.646a.5.5 0 0 1 .708 0L8 8.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" />\r\n                    </svg>\r\n                </div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {subComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StockFigure;","import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nimport { tickerService, errorMessageService } from '../../../services/generic-service';\r\nimport './basic-info.scss';\r\nimport * as Consts from '../../../shared/constants';\r\n\r\nclass BasicInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            ticker: '',\r\n            showInfo: false,\r\n            companyInfo: {\r\n                name: '',\r\n                ipoDate: '',\r\n                exchange: '',\r\n                marketCap: 0,\r\n                shareOutstanding: 0,\r\n                logoUrl: '',\r\n                companyWebUrl: '',\r\n                industry: ''\r\n            }\r\n        };\r\n        this.props = props;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\r\n            if (ticker) {\r\n                this.setState({ ticker: ticker });\r\n                this.getBasicInfo(ticker);\r\n            } else {\r\n                this.setState({ ticker: '' });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.tickerSubscription.unsubscribe();\r\n    }\r\n\r\n    getBasicInfo(ticker) {\r\n        errorMessageService.changeErrorMessage('');\r\n        this.setState({ isLoading: true });\r\n\r\n        const apiParams = {\r\n            symbol: ticker,\r\n            token: Consts.token\r\n        };\r\n\r\n        let paramsArray = [];\r\n        for (let prop in apiParams) {\r\n            paramsArray.push(`${prop}=${apiParams[prop]}`);\r\n        }\r\n        let getBasicInfoUrl = Consts.getBasicInfoUrl + paramsArray.join('&');\r\n\r\n        fetch(getBasicInfoUrl, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(\"HTTP status \" + response.status);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                if (data && (Object.keys(data).length !== 0 || data.constructor !== Object)) {\r\n                    this.setState({\r\n                        companyInfo: {\r\n                            ...this.state.companyInfo,\r\n                            name: data.name,\r\n                            ipoDate: data.ipo,\r\n                            exchange: data.exchange,\r\n                            marketCap: data.marketCapitalization,\r\n                            shareOutstanding: data.shareOutstanding,\r\n                            logoUrl: data.logo,\r\n                            companyWebUrl: data.weburl,\r\n                            industry: data.finnhubIndustry,\r\n                        }\r\n                    });\r\n                    this.setState({ showInfo: true });\r\n                } else {\r\n                    errorMessageService.changeErrorMessage(`API returned 'NO DATA' for ${ticker}`);\r\n                    this.setState({ showInfo: false });\r\n                }\r\n                this.setState({ isLoading: false });\r\n            })\r\n            .catch(error => this.setState({ error }));\r\n    }\r\n\r\n    render() {\r\n        let subComponent;\r\n        if (this.state.isLoading === true) {\r\n            subComponent =\r\n                <div className='loader-wrapper'>\r\n                    <CircularProgress />\r\n                </div>\r\n        } else if (this.state.showInfo) {\r\n            subComponent =\r\n                <div>\r\n                    <p>{this.state.ticker}</p>\r\n                    <p>{this.state.companyInfo.name}</p>\r\n                    <a href={this.state.companyInfo.companyWebUrl}>\r\n                        <img src={this.state.companyInfo.logoUrl} alt=\"Company Logo\"></img>\r\n                    </a>\r\n                    <p>IPO Date: {this.state.companyInfo.ipoDate}</p>\r\n                    <p>Exchange: {this.state.companyInfo.exchange}</p>\r\n                    <p>Market Cap: {this.state.companyInfo.marketCap}</p>\r\n                    <p>Share Outstanding: {this.state.companyInfo.shareOutstanding}</p>\r\n                    <p>Industry: {this.state.companyInfo.industry}</p>\r\n                </div>\r\n        }\r\n        return (\r\n            <div>\r\n                {subComponent}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BasicInfo;\r\n","export const dateService = {\r\n    // calculate date string from n days before today\r\n    getDateStrOfDateRange: (daysRange) => {\r\n        const deadlineTimestamp = (new Date().setHours(0, 0, 0, 0) / 1000 - daysRange * 24 * 60 * 60) * 1000;\r\n        return new Date(deadlineTimestamp).toISOString().split(\"T\")[0];\r\n    },\r\n\r\n    getDateStrFromDate: (date) =>\r\n        new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\r\n            .toISOString()\r\n            .split(\"T\")[0],\r\n\r\n    timeSince: (date) => {\r\n        var seconds = Math.floor(((new Date().getTime()/1000) - date));\r\n        var intervalType;\r\n\r\n        var interval = Math.floor(seconds / 31536000);\r\n        if (interval >= 1) {\r\n          intervalType = 'year';\r\n        } else {\r\n          interval = Math.floor(seconds / 2592000);\r\n          if (interval >= 1) {\r\n            intervalType = 'month';\r\n          } else {\r\n            interval = Math.floor(seconds / 86400);\r\n            if (interval >= 1) {\r\n              intervalType = 'day';\r\n            } else {\r\n              interval = Math.floor(seconds / 3600);\r\n              if (interval >= 1) {\r\n                intervalType = \"hour\";\r\n              } else {\r\n                interval = Math.floor(seconds / 60);\r\n                if (interval >= 1) {\r\n                  intervalType = \"minute\";\r\n                } else {\r\n                  interval = seconds;\r\n                  intervalType = \"second\";\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      \r\n        if (interval > 1 || interval === 0) {\r\n          intervalType += 's';\r\n        }\r\n      \r\n        return `${interval} ${intervalType} ago`;\r\n    }\r\n};","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport './news-card.scss';\r\nimport { dateService } from '../../../../services/date-service';\r\n\r\nclass NewsCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    handleClickNews(event) {\r\n        window.location.href = this.props.newsDetails.url;\r\n    }\r\n\r\n    render() {\r\n        const MAX_LENGTH = 300;\r\n\r\n        return (\r\n            <div className=\"news-card-wrapper\">\r\n                <Card onClick={this.handleClickNews.bind(this)}>\r\n                    <CardContent>\r\n                        <Typography className='card-headline'>\r\n                            {this.props.newsDetails.headline}\r\n                        </Typography>\r\n                        <Typography className='card-time-source' color=\"textSecondary\" gutterBottom>\r\n                            {dateService.timeSince(this.props.newsDetails.datetime) + '   ' + this.props.newsDetails.source}\r\n                        </Typography>\r\n                        <Typography className='card-details' variant=\"body2\" component=\"span\">\r\n                            {this.props.newsDetails.summary.length > MAX_LENGTH ?\r\n                                (\r\n                                    <div>\r\n                                        {`${this.props.newsDetails.summary.substring(0, MAX_LENGTH)}...`}<a href={this.props.newsDetails.url}>Read more</a>\r\n                                    </div>\r\n                                ) :\r\n                                <p>{this.props.newsDetails.summary}</p>\r\n                            }\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NewsCard;\r\n","import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nimport * as Consts from '../../../shared/constants';\r\nimport { tickerService } from '../../../services/generic-service';\r\nimport { dateService } from '../../../services/date-service';\r\nimport './company-news.scss';\r\nimport NewsCard from './news-card/news-card'\r\n\r\nclass CompanyNews extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            ticker: '',\r\n            news: []\r\n        };\r\n        this.props = props;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\r\n            if (ticker) {\r\n                this.setState({ ticker: ticker });\r\n                this.getCompanyNews(ticker);\r\n            } else {\r\n                this.setState({ ticker: '' });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.tickerSubscription.unsubscribe();\r\n    }\r\n\r\n    getCompanyNews(ticker) {\r\n        this.setState({ isLoading: true });\r\n\r\n        const apiParams = {\r\n            symbol: ticker,\r\n            from: dateService.getDateStrOfDateRange(365),\r\n            to: dateService.getDateStrOfDateRange(0),\r\n            token: Consts.token\r\n        };\r\n\r\n        let paramsArray = [];\r\n        for (let prop in apiParams) {\r\n            paramsArray.push(`${prop}=${apiParams[prop]}`);\r\n        }\r\n        let getCompanyNewsUrl = Consts.getCompanyNewsUrl + paramsArray.join('&');\r\n\r\n        fetch(getCompanyNewsUrl, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                if (data) {\r\n                    this.setState({ news: data.splice(0, 9)});\r\n                }\r\n                this.setState({ isLoading: false });\r\n            })\r\n            .catch(error => this.setState({ error }));\r\n    }\r\n\r\n    render() {\r\n        let subComponent;\r\n        if (this.state.isLoading === true) {\r\n            subComponent =\r\n                <div className='loader-wrapper'>\r\n                    <CircularProgress />\r\n                </div>\r\n        } else {\r\n            subComponent =\r\n                <div>\r\n                    {this.state.news.map(element =>\r\n                        <NewsCard key={element.id} newsDetails={element} />\r\n                    )}\r\n                </div>\r\n        }\r\n        return (\r\n            <div>\r\n                {subComponent}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CompanyNews;\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Tabs, Tab, AppBar, Box\r\n} from '@material-ui/core';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport CommentOutlinedIcon from '@material-ui/icons/CommentOutlined';\r\n\r\nimport './stock-details.scss';\r\nimport { tickerService } from '../../services/generic-service';\r\nimport StockFigure from './stock-figure/stock-figure'\r\nimport BasicInfo from './basic-info/basic-info'\r\nimport CompanyNews from './company-news/company-news'\r\n\r\nclass StockDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ticker: '',\r\n            tabIndex: 0,\r\n        };\r\n        this.props = props;\r\n        this.handleTabChange = this.handleTabChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\r\n            if (ticker) {\r\n                this.setState({ ticker: ticker });\r\n            } else {\r\n                this.setState({ ticker: '' });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.tickerSubscription.unsubscribe();\r\n    }\r\n\r\n    handleTabChange = (event, newTabIndex) => {\r\n        this.setState({ tabIndex: newTabIndex });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"stock-details-inner-wrapper\">\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                        variant=\"scrollable\"\r\n                        value={this.state.tabIndex}\r\n                        onChange={this.handleTabChange}\r\n                        TabIndicatorProps={{ style: { background: '#6200EE' } }}\r\n                    >\r\n                        <Tab label=\"Chart\"  icon={<TimelineIcon />} {...a11yProps(0)} />\r\n                        <Tab label=\"Basic Info\" disabled={!!!this.state.ticker} icon={<InfoOutlinedIcon />}{...a11yProps(1)} />\r\n                        <Tab label=\"News\" disabled={!!!this.state.ticker} icon={<CommentOutlinedIcon />}{...a11yProps(2)} />\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                <TabPanel value={this.state.tabIndex} index={0}>\r\n                    <StockFigure />\r\n                </TabPanel>\r\n                <TabPanel value={this.state.tabIndex} index={1}>\r\n                    <BasicInfo />\r\n                </TabPanel>\r\n                <TabPanel value={this.state.tabIndex} index={2}>\r\n                    <CompanyNews />\r\n                </TabPanel>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default StockDetails;\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}","import React from 'react';\r\nimport {\r\n    Accordion, Grid, AccordionDetails, AccordionSummary,\r\n    Typography, MenuItem, FormControl, Select, Button\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport packageJson from '../package.json';\r\nimport './layout.scss';\r\nimport { tickerService, daysRangeService, errorMessageService } from './services/generic-service';\r\nimport Header from './components/header/header';\r\nimport MostActiveStocksTabs from './components/most-active-stocks-tabs/most-active-stocks-tabs';\r\nimport DataGrid from './components/data-grid/data-grid';\r\nimport StockDetails from './components/stock-details/stock-details';\r\n\r\nlet arkData = require('./rawData/mergedData.json');\r\n\r\nclass Layout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: ['most-active-stock-panel'],\r\n            mostActiveDaysRange: 7,\r\n            errorMessage: '',\r\n            isInputing: false\r\n        };\r\n\r\n        this.handlePanelChange = this.handlePanelChange.bind(this);\r\n        this.handleClickDaysRange = this.handleClickDaysRange.bind(this);\r\n        this.handleSelectDaysRange = this.handleSelectDaysRange.bind(this);\r\n        this.handleDonationSectionClick = this.handleDonationSectionClick.bind(this);\r\n\r\n        this.coffeeEmoji = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\r\n            if (ticker) {\r\n                // expand stock details section if it is closed\r\n                const panelArr = this.state.expanded;\r\n                if (panelArr.indexOf('stock-details-panel') === -1) {\r\n                    panelArr.push('stock-details-panel');\r\n                }\r\n                this.setState({ expanded: panelArr });\r\n\r\n            } else {\r\n                this.setState({ ticker: '' });\r\n            }\r\n        });\r\n\r\n        this.mostActiveDaysRangeSubscription = daysRangeService.getMostActiveDaysRange().subscribe(mostActiveDaysRange => {\r\n            if (mostActiveDaysRange) {\r\n                this.setState({ mostActiveDaysRange: mostActiveDaysRange });\r\n            } else {\r\n                this.setState({ mostActiveDaysRange: 30 });\r\n            }\r\n        });\r\n\r\n        this.errorMessageSubscription = errorMessageService.getErrorMessage().subscribe(message => {\r\n            if (message) {\r\n                this.setState({ errorMessage: message });\r\n            } else {\r\n                this.setState({ errorMessage: '' });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.tickerSubscription.unsubscribe();\r\n        this.mostActiveDaysRangeSubscription.unsubscribe();\r\n        this.errorMessageSubscription.unsubscribe();\r\n    }\r\n\r\n    handlePanelChange(panel) {\r\n        return (event, isExpanded) => {\r\n            const panelArr = this.state.expanded;\r\n            if (isExpanded) {\r\n                panelArr.push(panel)\r\n            } else {\r\n                const index = panelArr.indexOf(panel);\r\n                if (index > -1) {\r\n                    panelArr.splice(index, 1);\r\n                }\r\n            }\r\n            this.setState({ expanded: panelArr });\r\n        }\r\n    };\r\n\r\n    handleClickDaysRange(event) {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    handleSelectDaysRange(event, type) {\r\n        switch (type) {\r\n            case 'mostActive':\r\n                daysRangeService.changeMostActiveDaysRange(event.target.value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleDonationSectionClick() {\r\n        console.log(this.coffeeEmoji)\r\n        this.coffeeEmoji.current.click();\r\n    }\r\n\r\n    render() {\r\n        let notificationBar;\r\n        if (this.state.errorMessage) {\r\n            notificationBar = <Alert variant=\"filled\" severity=\"error\" onClose={() => { this.setState({ errorMessage: '' }) }}>{this.state.errorMessage}</Alert>\r\n        } else {\r\n            notificationBar = <div></div>\r\n        }\r\n        return (\r\n            <div className=\"layout-wrapper\">\r\n                <div className=\"header-wrapper\">\r\n                    <Header />\r\n                </div>\r\n                <div className=\"notification-bar-wrapper\">\r\n                    {notificationBar}\r\n                </div>\r\n                <div className=\"accordion-wrapper\">\r\n                    <Accordion expanded={this.state.expanded.includes('most-active-stock-panel')} onChange={this.handlePanelChange('most-active-stock-panel')}>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"most-active-stock-panel-content\"\r\n                            id=\"most-active-stock-panel-header\">\r\n\r\n                            <Grid item xs={5} md={4}>\r\n                                <Typography className=\"accordion-heading\">Most Active Stocks</Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={7} md={4} className=\"second-heading-wrapper\">\r\n                                <Typography className=\"accordion-second-heading\" component={'span'}>\r\n                                    Top 10 Most Active Stocks in\r\n                                <FormControl className=\"days-dropdown\">\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                                            id=\"demo-simple-select-placeholder-label\"\r\n                                            value={this.state.mostActiveDaysRange}\r\n                                            onClick={(e) => this.handleClickDaysRange(e)}\r\n                                            onChange={(e) => this.handleSelectDaysRange(e, 'mostActive')}\r\n                                            MenuProps={{ disableScrollLock: true }}\r\n                                        >\r\n                                            <MenuItem value={1}>1 Day</MenuItem>\r\n                                            <MenuItem value={7}>1 Week</MenuItem>\r\n                                            <MenuItem value={14}>2 Weeks</MenuItem>\r\n                                            <MenuItem value={30}>1 Month</MenuItem>\r\n                                            <MenuItem value={60}>2 Months</MenuItem>\r\n                                            <MenuItem value={10000}>From 11/12/2019</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                        </AccordionSummary>\r\n\r\n                        <AccordionDetails>\r\n                            <div className=\"most-active-stocks-tabs-wrapper\">\r\n                                <MostActiveStocksTabs />\r\n                            </div>\r\n                        </AccordionDetails>\r\n\r\n                    </Accordion>\r\n\r\n                    <Accordion expanded={this.state.expanded.includes('stock-details-panel')} onChange={this.handlePanelChange('stock-details-panel')}>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"stock-details-panel-content\"\r\n                            id=\"stock-details-panel-header\">\r\n\r\n                            <Grid item xs={5} md={4}>\r\n                                <Typography className=\"accordion-heading\">Stock Details</Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={7} md={4} className=\"second-heading-wrapper\">\r\n                                {/* <Typography className=\"accordion-second-heading\" component={'span'}>\r\n                                Chart with ARK Trade History</Typography> */}\r\n                            </Grid>\r\n\r\n                        </AccordionSummary>\r\n\r\n                        <AccordionDetails>\r\n                            <div className=\"stock-details-wrapper\">\r\n                                <StockDetails />\r\n                            </div>\r\n                        </AccordionDetails>\r\n\r\n                    </Accordion>\r\n\r\n                    <Accordion expanded={this.state.expanded.includes('data-grid-panel')} onChange={this.handlePanelChange('data-grid-panel')}>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"data-grid-panel-content\"\r\n                            id=\"data-grid-panel-header\">\r\n\r\n                            <Grid item xs={5} md={4}>\r\n                                <Typography className=\"accordion-heading\">Transactions Table</Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={7} md={4} className=\"second-heading-wrapper\">\r\n                                <Typography className=\"accordion-second-heading\">All ARK Transactions</Typography>\r\n                            </Grid>\r\n\r\n                        </AccordionSummary>\r\n\r\n                        <AccordionDetails>\r\n                            <DataGrid />\r\n                        </AccordionDetails>\r\n\r\n                    </Accordion>\r\n\r\n                </div>\r\n\r\n                <Grid container className=\"sticky-footer\">\r\n\r\n                    <Grid item xs={3} md={3}>\r\n                        <p className=\"disclaimer\">Disclaimer: This web is built for education only.<br></br>The author takes no responsibility for financial decisions.</p>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} md={6} className=\"donation-section\">\r\n                        <div className=\"donation\" onClick={this.handleDonationSectionClick}>\r\n                            <form action=\"https://www.paypal.com/donate\" method=\"post\" target=\"_top\">\r\n                                <input type=\"hidden\" name=\"cmd\" value=\"_donations\" />\r\n                                <input type=\"hidden\" name=\"business\" value=\"xzhu@wpi.edu\" />\r\n                                <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\r\n                                <Button size=\"small\" variant=\"contained\" color=\"primary\" className=\"emoji-submit-button\" type=\"submit\" ref={this.coffeeEmoji}>\r\n                                    <span name=\"submit\" role=\"img\" aria-label=\"coffee\">Like this? <br></br>Pls buy me a coffee~☕</span>\r\n                                </Button>\r\n                                <img alt=\"\" border=\"0\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\r\n                            </form>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} md={3} className=\"additonal-info-section\">\r\n                        <div className='info-container'>\r\n                            <p className='info-version'>Version: {packageJson.version}</p>\r\n                            <p className='info-update-date'>Latest ARK Data: {arkData[0]['Date']}</p>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport Layout from './layout';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Layout />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}