{"ast":null,"code":"export var dateService={// calculate date string from n days before today\ngetDateStrOfDateRange:function getDateStrOfDateRange(daysRange){var deadlineTimestamp=(new Date().setHours(0,0,0,0)/1000-daysRange*24*60*60)*1000;return new Date(deadlineTimestamp).toISOString().split(\"T\")[0];},getDateStrFromDate:function getDateStrFromDate(date){return new Date(date.getTime()-date.getTimezoneOffset()*60000).toISOString().split(\"T\")[0];},timeSince:function timeSince(date){var seconds=Math.floor(new Date().getTime()/1000-date);var intervalType;var interval=Math.floor(seconds/31536000);if(interval>=1){intervalType='year';}else{interval=Math.floor(seconds/2592000);if(interval>=1){intervalType='month';}else{interval=Math.floor(seconds/86400);if(interval>=1){intervalType='day';}else{interval=Math.floor(seconds/3600);if(interval>=1){intervalType=\"hour\";}else{interval=Math.floor(seconds/60);if(interval>=1){intervalType=\"minute\";}else{interval=seconds;intervalType=\"second\";}}}}}if(interval>1||interval===0){intervalType+='s';}return\"\".concat(interval,\" \").concat(intervalType,\" ago\");}};","map":{"version":3,"sources":["C:/Users/Danny/Documents/GitHub/ark-funds-monitor/src/services/date-service.js"],"names":["dateService","getDateStrOfDateRange","daysRange","deadlineTimestamp","Date","setHours","toISOString","split","getDateStrFromDate","date","getTime","getTimezoneOffset","timeSince","seconds","Math","floor","intervalType","interval"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,WAAW,CAAG,CACvB;AACAC,qBAAqB,CAAE,+BAACC,SAAD,CAAe,CAClC,GAAMC,CAAAA,iBAAiB,CAAG,CAAC,GAAIC,CAAAA,IAAJ,GAAWC,QAAX,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CAA6B,CAA7B,EAAkC,IAAlC,CAAyCH,SAAS,CAAG,EAAZ,CAAiB,EAAjB,CAAsB,EAAhE,EAAsE,IAAhG,CACA,MAAO,IAAIE,CAAAA,IAAJ,CAASD,iBAAT,EAA4BG,WAA5B,GAA0CC,KAA1C,CAAgD,GAAhD,EAAqD,CAArD,CAAP,CACH,CALsB,CAOvBC,kBAAkB,CAAE,4BAACC,IAAD,QAChB,IAAIL,CAAAA,IAAJ,CAASK,IAAI,CAACC,OAAL,GAAkBD,IAAI,CAACE,iBAAL,GAA2B,KAAtD,EACKL,WADL,GAEKC,KAFL,CAEW,GAFX,EAEgB,CAFhB,CADgB,EAPG,CAYvBK,SAAS,CAAE,mBAACH,IAAD,CAAU,CACjB,GAAII,CAAAA,OAAO,CAAGC,IAAI,CAACC,KAAL,CAAa,GAAIX,CAAAA,IAAJ,GAAWM,OAAX,GAAqB,IAAtB,CAA8BD,IAA1C,CAAd,CACA,GAAIO,CAAAA,YAAJ,CAEA,GAAIC,CAAAA,QAAQ,CAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,CAAG,QAArB,CAAf,CACA,GAAII,QAAQ,EAAI,CAAhB,CAAmB,CACjBD,YAAY,CAAG,MAAf,CACD,CAFD,IAEO,CACLC,QAAQ,CAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,CAAG,OAArB,CAAX,CACA,GAAII,QAAQ,EAAI,CAAhB,CAAmB,CACjBD,YAAY,CAAG,OAAf,CACD,CAFD,IAEO,CACLC,QAAQ,CAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,CAAG,KAArB,CAAX,CACA,GAAII,QAAQ,EAAI,CAAhB,CAAmB,CACjBD,YAAY,CAAG,KAAf,CACD,CAFD,IAEO,CACLC,QAAQ,CAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,CAAG,IAArB,CAAX,CACA,GAAII,QAAQ,EAAI,CAAhB,CAAmB,CACjBD,YAAY,CAAG,MAAf,CACD,CAFD,IAEO,CACLC,QAAQ,CAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,CAAG,EAArB,CAAX,CACA,GAAII,QAAQ,EAAI,CAAhB,CAAmB,CACjBD,YAAY,CAAG,QAAf,CACD,CAFD,IAEO,CACLC,QAAQ,CAAGJ,OAAX,CACAG,YAAY,CAAG,QAAf,CACD,CACF,CACF,CACF,CACF,CAED,GAAIC,QAAQ,CAAG,CAAX,EAAgBA,QAAQ,GAAK,CAAjC,CAAoC,CAClCD,YAAY,EAAI,GAAhB,CACD,CAED,gBAAUC,QAAV,aAAsBD,YAAtB,SACH,CAjDsB,CAApB","sourcesContent":["export const dateService = {\r\n    // calculate date string from n days before today\r\n    getDateStrOfDateRange: (daysRange) => {\r\n        const deadlineTimestamp = (new Date().setHours(0, 0, 0, 0) / 1000 - daysRange * 24 * 60 * 60) * 1000;\r\n        return new Date(deadlineTimestamp).toISOString().split(\"T\")[0];\r\n    },\r\n\r\n    getDateStrFromDate: (date) =>\r\n        new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\r\n            .toISOString()\r\n            .split(\"T\")[0],\r\n\r\n    timeSince: (date) => {\r\n        var seconds = Math.floor(((new Date().getTime()/1000) - date));\r\n        var intervalType;\r\n\r\n        var interval = Math.floor(seconds / 31536000);\r\n        if (interval >= 1) {\r\n          intervalType = 'year';\r\n        } else {\r\n          interval = Math.floor(seconds / 2592000);\r\n          if (interval >= 1) {\r\n            intervalType = 'month';\r\n          } else {\r\n            interval = Math.floor(seconds / 86400);\r\n            if (interval >= 1) {\r\n              intervalType = 'day';\r\n            } else {\r\n              interval = Math.floor(seconds / 3600);\r\n              if (interval >= 1) {\r\n                intervalType = \"hour\";\r\n              } else {\r\n                interval = Math.floor(seconds / 60);\r\n                if (interval >= 1) {\r\n                  intervalType = \"minute\";\r\n                } else {\r\n                  interval = seconds;\r\n                  intervalType = \"second\";\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      \r\n        if (interval > 1 || interval === 0) {\r\n          intervalType += 's';\r\n        }\r\n      \r\n        return `${interval} ${intervalType} ago`;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}